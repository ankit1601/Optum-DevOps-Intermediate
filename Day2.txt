docker kill
docker stop

docker ps
docker stats

docker wait
docker exec

docker diff
docker top

docker pull
docker images

docker cp
docker port

docker pause
docker unpause

docker run
docker inspect

docker run -p
docker rm

docker logs
docker events

docker add
================================================================================
================================================================================
How to create an Image?
=============================================

What is an Docker Image?
------------------------
	Contains MULTIPLE FILESYSTEM(AKA Layer)
		
	WHy Layer?


	APP3
	APP2
	APP1
	USERFS
	ROOTFS
	 +  +  +  +  + 


VM Image == OS Image === 
---------------------------------------
BOOTFS + ROOTFS + USERFS + APP1 + APP2 + APP3

Docker Image
====================================
ROOTFS + USERFS + APP1 + APP2 + APP3



  13  ls
   14  cd /var/lib/docker/overlay2/
   15  clear
   16  ls
   17  docker info
   18  clear
   19  docker history httpd
   20  clear
   21  docker history httpd
   22  pwd
   23  cd ..
   24  clear
   25  ls
   26  cd overlay2/
   27  clear
   28  ls
   29  clear
   30  ls
   31  docker create httpd
   32  ls
   33  du -sh c72b4c158d8d1700c9daf69622bd1a049f56a6edbc06333a70a4dfd807d54116
   34  du -sh c72b4c158d8d1700c9daf69622bd1a049f56a6edbc06333a70a4dfd807d54116-init
   35  clear
   36  df -kh
   37  docker ps
   38  docker ps -a
   39  docker start a2d0552b0f9f
   40  ls
   41  du -sh c72b4c158d8d1700c9daf69622bd1a049f56a6edbc06333a70a4dfd807d54116
   42  du -sh c72b4c158d8d1700c9daf69622bd1a049f56a6edbc06333a70a4dfd807d54116-init
   43  clear
   44  df -kh
   45  clear
   46  docker run -d httpd
   47  df -kh
   48  docker run -d httpd
   49  df -kh
   50  clear
   51  docker ps
   52  docker exec e9b15260d760 touch /tmp/ramukaka.txt
   53  find . -name ramukaka.txt
   54  docker stop e9b15260d760
   55  find . -name ramukaka.txt
   56  docker start e9b15260d760
   57  find . -name ramukaka.txt



============================================================


How to create an Image?
===================================
Manual === Exisitng container
=========================================================
Base - ubuntu
			+ JAVA + GIT + APACHE
			===========================
			ub-java-git-ap



Automated way === Dockerfile



 58  history
   59  cleare
   60  clear
   61  lear
   62  clear
   63  docker run -itd --name raj1 ubuntu
   64  clear
   65  docker ps
   66  docker exec -it raj1 /bin/bash
   67  docker ps
   68  docker exec raj1 git
   69  clear
   70  docker exec raj1 java
   71  clear
   72  docker exec raj1 which apache2
   73  clear
   74  ls
   75  docker ps
   76  docker commit -m"ub-java-git-ap" -a Rajesh Kumar df105b206994 ub-java-git-ap
   77  clear
   78  docker commit -m"ub-java-git-ap" -a "Rajesh Kumar" df105b206994 ub-java-git-ap
   79  docker images
   80  docker history ubuntu
   81  docker history ub-java-git-ap
   82  docker run -itd --name mgr ub-java-git-ap
   83  docker ps
   84  clear
   85  ls
   86  clear
   87  docker ps
   88  docker exec mgr git
   89  docker exec mgr java
   90  clear

============================================================
============================================================
How to share an images?
-------------------------------------
1 using Tar ball

 101  clear
  102  ls
  103  docker images
  104  docker save -o ub-java-git-ap.tar ub-java-git-ap
  105  ls
  106  docker docker container stop $(docker container ls -aq)
  107  docker container stop $(docker container ls -aq)
  108  docker rm -vf $(docker ps -a -q)
  109  docker rmi -f $(docker images -a -q)
  110  clear
  111  ls
  112  docker images
  113  ls
  114  docker load -i ub-java-git-ap.tar
  115  clear
  116  ls
  117  docker images



2 using registry hub.docker.com


 116  ls
  117  docker images
  118  history
  119  clear
  120  docker images
  121  clear
  122  docker login
  123  docker images
  124  docker run -it ubuntu
  125  clear
  126  docker ps -a
  127  docker commit -m"touch" -a"rajehs" 9ac012320cdb touch
  128  docker images
  129  docker push touch
  130  docker tag touch devopsschools/oct22
  131  clear
  132  docker images
  133  docker push devopsschools/oct22
  134  history
  135  docker images

=========================================
Automated way === Dockerfile
===============================================
			file
			Named - with dockerfile
		
			Each line == one layer
			Layer is created from a container from the last layer

FROM	ubuntu
MAINTAINER rajesh kumar devops@rajeshkumar.xyz
RUN apt-get update
RUN apt-get install git -y
COPY index.html /opt
ENV JAVA_HOME /opt/java

FROM	ubuntu
MAINTAINER rajesh kumar devops@rajeshkumar.xyz
RUN touch rajesh1
RUN touch rajesh2
RUN touch rajesh3
RUN useradd raju
USER raju

-----------------------------------------------------------------
How to set PID1?

CMD			ENTRYPOINT
----------------------------------


CMD can be replaced

ENTRYPOINT CAN NOT BE REPLACED

CMD & ENTRYPOINT BOTH === PID 1 would be set from ENTRYPOINT and CMD would be param.

ENTRYPOINT "echo"
CMD "raju"

echo raju
===================





FROM	ubuntu
MAINTAINER rajesh kumar devops@rajeshkumar.xyz
CMD ["ls"]

EXAMPLE PROGRAM
--------------------
https://www.devopsschool.com/blog/example-and-sample-programs-of-dockerfile/

-----------------------------------------------------------------------
???

2 CMD
2 ENTRYPOINT


 140  mkdir doc
  141  cd doc/
  142  cler
  143  clear
  144  vi dockerfile
  145  ls
  146  touch index.html
  147  clear
  148  ls
  149  docker build -t raj1 .
  150  clear
  151  docker images
  152  docker run -itd raj1
  153  docker ps
  154  docker exec 4379f5d7a34f ls /opt/
  155  docker exec 4379f5d7a34f env
  156  clear
  157  vi dockerfile
  158  docker run -itd raj2
  159  docker build -t raj2 .
  160  docker images
  161  clear
  162  docker images
  163  docker run raj2 git
  164  cleaar
  165  clear
  166  ls
  167  vi doc1
  168  docker build -t raj2 -f doc1 .
  169  clear
  170  docker images
  171  docker history raj2
  172  clear
  173  docker ps
  174  docker exec -it 4379f5d7a34f /bin/bash
  175  clear
  176  ls
  177  vi doc2
  178  docker build -t raj2 -f doc2 .
  179  clear
  180  docker images
  181  docker run -itd raj2
  182  docker ps
  183  docker exec -it d548d8925d83 /bin/bash
  184  clear
  185  docker ps
  186  docker run ubuntu ls
  187  docker ps -a
  188  clear
  189  docker run -d jenkins
  190  docker run -d jenkins/jenkins
  191  clear
  192  docker ps
  193  docker run -d jenkins/jenkins ls
  194  docker ps
  195  docker ps -a
  196  clear
  197  ls
  198  vi doc3
  199  docker build -t doc2 -f doc3 .
  200  docker images
  201  clear
  202  docker run doc3
  203  docker images
  204  clear
  205  docker build -t doc3 -f doc3 .
  206  docker run doc3
  207  clear
  208  vi doc3
  209  docker build -t doc3 -f doc3 .
  210  clear
  211  docker run doc3
  212  docker ps -a
  213  clear
  214  docker run doc3 df
  215  docker ps -a
  216  clear






